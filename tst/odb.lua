local luagi = require("luagi")
local test_helper = require("test_helper")

describe( "open_odb", function()
   local odb = nil
   local err = nil
   setup( function()
      test_helper.setup()
      odb, err = luagi.open_odb( test_helper.path )
   end)

   it("should have no errors", function()
      assert.is.falsy( err )
   end)
   it("should return a valid odb", function()
      assert.is.not_nil( odb )
      assert.are.equal( "userdata", type( odb ) )
   end)
   describe( "num_backends #odb", function()
      it("should have two backends", function()
         assert.are.equal( 2, odb:num_backends() )
      end)
   end)
   describe( "foreach #odb", function()
      local count = 0
      odb:foreach( function( oid )
         count = count + 1
         return 0
      end)
      assert.are.equal(0, count )
   end)
end)

describe( "new_odb", function()
   local odb = nil
   local err = nil
   setup( function()
      odb, err = luagi.new_odb()
   end)

   it("should have no errors", function()
      assert.is.falsy( err )
   end)
   it("should return a valid odb", function()
      assert.is.not_nil( odb )
      assert.are.equal( "userdata", type( odb ) )
   end)
   describe( "num_backends #odb", function()
      it("should have no backends", function()
         assert.are.equal( 0, odb:num_backends() )
      end)
   end)
end)

describe( "add_disk_alternate #odb", function() pending("luagi_odb_add_disk_alternate ") end)
describe( "read #odb", function() pending("luagi_odb_read ") end)
describe( "read_prefix #odb", function() pending("luagi_odb_read_prefix ") end)
describe( "read_header #odb", function() pending("luagi_odb_read_header ") end)
describe( "exists #odb", function() pending("luagi_odb_exists ") end)
describe( "refresh #odb", function() pending("luagi_odb_refresh ") end)
describe( "write #odb", function() pending("luagi_odb_write ") end)
describe( "open_wstream #odb", function() pending("luagi_odb_open_wstream ") end)
describe( "open_rstream #odb", function() pending("luagi_odb_open_rstream ") end)
describe( "write_pack #odb", function() pending("luagi_odb_write_pack ") end)
describe( "add_backend #odb", function() pending("luagi_odb_add_backend ") end)
describe( "add_alternate #odb", function() pending("luagi_odb_add_alternate ") end)
describe( "get_backend #odb", function() pending("luagi_odb_get_backend ") end)
describe( "indexer #odb", function() pending("luagi_indexer_new ") end)
describe( "read #odb", function() pending("luagi_odb_stream_read ") end)
describe( "write #odb", function() pending("luagi_odb_stream_write ") end)
describe( "finalize_write #odb", function() pending("luagi_odb_stream_finalize_write ") end)
describe( "id #odb", function() pending("luagi_odb_object_id ") end)
describe( "data #odb", function() pending("luagi_odb_object_data ") end)
describe( "size #odb", function() pending("luagi_odb_object_size ") end)
describe( "type #odb", function() pending("luagi_odb_object_type ") end)
